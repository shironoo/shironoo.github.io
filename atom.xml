<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[shironoo's Memorandum]]></title>
  <link href="http://blog.shironoo.org/atom.xml" rel="self"/>
  <link href="http://blog.shironoo.org/"/>
  <updated>2014-11-21T15:55:49+09:00</updated>
  <id>http://blog.shironoo.org/</id>
  <author>
    <name><![CDATA[shironoo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ownCloud テキストエディタのShift JIS 文字化け対策]]></title>
    <link href="http://blog.shironoo.org/blog/2014/11/21/owncloud-texteditor-sjis/"/>
    <updated>2014-11-21T15:14:00+09:00</updated>
    <id>http://blog.shironoo.org/blog/2014/11/21/owncloud-texteditor-sjis</id>
    <content type="html"><![CDATA[<p>ownCloud 7.0.3のテキストエディタで，Shift JISの文書を開くと文字化けしてしまいます．
不便なのでソースを修正しました．</p>

<p><code>owncloud/apps/files_texteditor/ajax/loadfile.php</code>内のmb_detect_encoding関数の引数に&#8221;SJIS-win&#8221;を追加します．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="err">$</span> <span class="nx">diff</span> <span class="o">-</span><span class="nx">u</span> <span class="nx">owncloud</span><span class="o">/</span><span class="nx">apps</span><span class="o">/</span><span class="nx">files_texteditor</span><span class="o">/</span><span class="nx">ajax</span><span class="o">/</span><span class="nx">loadfile</span><span class="o">.</span><span class="nx">php</span><span class="p">{</span><span class="o">.</span><span class="nx">bak</span><span class="p">,}</span>
</span><span class='line'><span class="o">---</span> <span class="nx">owncloud</span><span class="o">/</span><span class="nx">apps</span><span class="o">/</span><span class="nx">files_texteditor</span><span class="o">/</span><span class="nx">ajax</span><span class="o">/</span><span class="nx">loadfile</span><span class="o">.</span><span class="nx">php</span><span class="o">.</span><span class="nx">bak</span>        <span class="mi">2014</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">21</span> <span class="mi">14</span><span class="o">:</span><span class="mi">20</span><span class="o">:</span><span class="mf">07.822817159</span> <span class="o">+</span><span class="mi">0900</span>
</span><span class='line'><span class="o">+++</span> <span class="nx">owncloud</span><span class="o">/</span><span class="nx">apps</span><span class="o">/</span><span class="nx">files_texteditor</span><span class="o">/</span><span class="nx">ajax</span><span class="o">/</span><span class="nx">loadfile</span><span class="o">.</span><span class="nx">php</span>    <span class="mi">2014</span><span class="o">-</span><span class="mi">11</span><span class="o">-</span><span class="mi">21</span> <span class="mi">14</span><span class="o">:</span><span class="mi">10</span><span class="o">:</span><span class="mf">17.844434118</span> <span class="o">+</span><span class="mi">0900</span>
</span><span class='line'><span class="o">@@</span> <span class="o">-</span><span class="mi">37</span><span class="p">,</span><span class="mi">7</span> <span class="o">+</span><span class="mi">37</span><span class="p">,</span><span class="mi">7</span> <span class="o">@@</span>
</span><span class='line'>        <span class="nv">$mime</span> <span class="o">=</span> <span class="nx">\OC\Files\Filesystem</span><span class="o">::</span><span class="na">getMimeType</span><span class="p">(</span><span class="nv">$path</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$mtime</span> <span class="o">=</span> <span class="nx">\OC\Files\Filesystem</span><span class="o">::</span><span class="na">filemtime</span><span class="p">(</span><span class="nv">$path</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filecontents</span> <span class="o">=</span> <span class="nx">\OC\Files\Filesystem</span><span class="o">::</span><span class="na">file_get_contents</span><span class="p">(</span><span class="nv">$path</span><span class="p">);</span>
</span><span class='line'><span class="o">-</span>       <span class="nv">$encoding</span> <span class="o">=</span> <span class="nb">mb_detect_encoding</span><span class="p">(</span><span class="nv">$filecontents</span><span class="o">.</span><span class="s2">&quot;a&quot;</span><span class="p">,</span> <span class="s2">&quot;UTF-8, WINDOWS-1252, ISO-8859-15, ISO-8859-1, ASCII&quot;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</span><span class='line'><span class="o">+</span>       <span class="nv">$encoding</span> <span class="o">=</span> <span class="nb">mb_detect_encoding</span><span class="p">(</span><span class="nv">$filecontents</span><span class="o">.</span><span class="s2">&quot;a&quot;</span><span class="p">,</span> <span class="s2">&quot;SJIS-win, UTF-8, WINDOWS-1252, ISO-8859-15, ISO-8859-1, ASCII&quot;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$encoding</span> <span class="o">==</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="c1">// set default encoding if it couldn&#39;t be detected</span>
</span><span class='line'>                <span class="nv">$encoding</span> <span class="o">=</span> <span class="s1">&#39;ISO-8859-15&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでテキストエディタからShift JISが扱えるようになりました．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linuxマシンを指定時刻に自動起動/停止させる]]></title>
    <link href="http://blog.shironoo.org/blog/2014/11/17/acpi-wakeup/"/>
    <updated>2014-11-17T14:24:33+09:00</updated>
    <id>http://blog.shironoo.org/blog/2014/11/17/acpi-wakeup</id>
    <content type="html"><![CDATA[<h3>自動起動</h3>

<p>ACPI Wakeupを使えば，電源オフ（S5）状態からでも自動で電源を入れることができます．
使い方は簡単で，<code>/sys/class/rtc/rtc0/wakealarm</code>に起動したい時刻(UNIX time) を書き込むだけです．</p>

<p>例えば，2014/11/22 18:30 に起動する場合は次のようになります．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>date --date <span class="s2">&quot;2014-11-22 18:30:00&quot;</span> +%s &gt; /sys/class/rtc/rtc0/wakealarm
</span></code></pre></td></tr></table></div></figure>


<p>こうした上でシャットダウンします．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>shutdown -h now
</span></code></pre></td></tr></table></div></figure>


<p>指定時刻に無事起動すれば成功です．
うまくいかない場合は<code>pm-utils</code>を入れて，<code>shutdown</code>の代わりに<code>pm-hibernate</code>を使うといいかもしれません．</p>

<h3>自動停止</h3>

<p><code>shutdown</code>コマンドを用います．</p>

<ul>
<li>60分後に停止</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>shutdown -h +60
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>23:00に停止</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>shutdown -h 23:00
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>2014/11/22 18:30に停止</li>
</ul>


<p>停止日が日をまたぐ場合，<code>at</code>を用いるのがお薦めです．
（日付のフォーマットは[日.月.年]なので注意）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>at 18:30 22.11.2014
</span><span class='line'>at&gt; shutdown -h now
</span><span class='line'>at&gt; &lt;EOT&gt;     <span class="c"># press Ctrl-D</span>
</span><span class='line'>job <span class="m">1</span> at Sat Nov <span class="m">22</span> 18:30:00 2014
</span></code></pre></td></tr></table></div></figure>


<p>これで停止設定が出来ました．</p>

<p>ジョブの確認には<code>atq</code>コマンドを用います．
コマンド内容まで知りたい場合には<code>at -c ジョブ番号</code>を用います．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>atq
</span><span class='line'><span class="m">1</span>       Sat Nov <span class="m">22</span> 18:30:00 <span class="m">2014</span> a hirono
</span><span class='line'><span class="nv">$ </span>at -c 1
</span><span class='line'><span class="o">(</span>snip<span class="o">)</span>
</span><span class='line'>shutdown -h now
</span></code></pre></td></tr></table></div></figure>


<p>ジョブの削除には<code>atrm</code>を用います．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>atrm 1
</span></code></pre></td></tr></table></div></figure>


<h3>参考</h3>

<p><a href="https://www.mythtv.org/wiki/ACPI_Wakeup">https://www.mythtv.org/wiki/ACPI_Wakeup</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[情報セキュリティスペシャリスト試験を受けた]]></title>
    <link href="http://blog.shironoo.org/blog/2014/10/20/information-security-specialist-examination/"/>
    <updated>2014-10-20T12:04:09+09:00</updated>
    <id>http://blog.shironoo.org/blog/2014/10/20/information-security-specialist-examination</id>
    <content type="html"><![CDATA[<p>IPAの情報セキュリティスペシャリスト試験を受けてきました．<br/>
まだ結果は出てないので，簡単に所感を書き残しておきます．</p>

<!-- more -->


<h3>午前I</h3>

<p>免除</p>

<h3>午前II</h3>

<p>例年通りでした．</p>

<h3>午後I</h3>

<p>問1（BOFとスマートフォンセキュリティ）と問3（マルウェア感染への対策）を選択．<br/>
問1は実際に手を動かしてBOFによるシェル奪取をやったことがあれば，楽に解ける問題でした．<br/>
問3は過去問でも頻出のテーマであり，こちらも取り組みやすかったです．</p>

<h3>午後II</h3>

<p>問2（Webアプリのセキュリティ）を選択．<br/>
DOM Based XSS，X-Frame-Options，HSTSなど，割と新しい話題が多かったのが印象的でした．<br/>
Webセキュリティはあまり詳しくないので，不十分な解答になってしまった感は否めません．<br/>
このあたりはIPAに多くの資料が掲載されているので，目を通しておくべきでしたね．</p>

<h3>全体を通して</h3>

<p>今回の試験を受けて感じたのは，昔の過去問によく見られたような，セキュリティ知識なしで解ける国語問題が少なくなったということです．<br/>
過去問で「アンチウイルスソフトを更新する」「PCを肌身離さず持ち歩く」みたいな模範解答を見てきてうんざりしていたのですが，今回の試験で少し印象が変わりました．<br/>
セキュリティは日進月歩の世界ですし，これからも新しいテーマを出題していってもらいたいです．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FileVault2を用いてMacのディスク暗号化を行う]]></title>
    <link href="http://blog.shironoo.org/blog/2014/10/17/enable-filevault2-encryption/"/>
    <updated>2014-10-17T17:58:57+09:00</updated>
    <id>http://blog.shironoo.org/blog/2014/10/17/enable-filevault2-encryption</id>
    <content type="html"><![CDATA[<p>もうすぐセキュリティスペシャリストの試験があるということで，ボチボチ勉強しているわけなんですが，解答に「ハードディスクの暗号化」ってのがよく出てきます．<br/>
MacにFileVault2ってのがあったことを思い出したので，有効にしてみました．
WindowsのBitLockerに相当する機能ですね．</p>

<p>暗号化を行うにあたって，オーバーヘッドがどのくらいあるのか気になったので，ディスクのベンチマークも測ってみました．</p>

<!-- more -->


<h2>FileVault2の有効化方法</h2>

<p>「システム環境設定」⇨「セキュリティとプライバシー」⇨「FileVault」 から有効にしましょう．</p>

<p>ログインパスワードを忘れてしまった時であっても，iCloud経由で復旧キーをダウンロードしてデータを複合できるようです．<br/>
逆に言えば，iCloudアカウントがクラックされてしまうとデータを複合されてしまいます．注意しましょう．</p>

<h2>ベンチマーク</h2>

<p>ベンチマークにはbonnie-64を使用しました．<br/>
<a href="https://code.google.com/p/bonnie-64/">https://code.google.com/p/bonnie-64/</a></p>

<ul>
<li>暗号化前</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>          -------Sequential Output-------- ---Sequential Input-- --Random--
</span><span class='line'>          -Per Char- --Block--- -Rewrite-- -Per Char- --Block--- --Seeks---
</span><span class='line'>Machine       GB M/sec %CPU M/sec %CPU M/sec %CPU M/sec %CPU M/sec %CPU  /sec %CPU
</span><span class='line'>Unencrypted    <span class="m">0</span>  14.6 97.9 705.7 54.7 703.9 42.0  15.0 99.2 4181.1 99.6 <span class="m">143281</span> 146.4
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>暗号化後</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>          -------Sequential Output-------- ---Sequential Input-- --Random--
</span><span class='line'>          -Per Char- --Block--- -Rewrite-- -Per Char- --Block--- --Seeks---
</span><span class='line'>Machine     GB M/sec %CPU M/sec %CPU M/sec %CPU M/sec %CPU M/sec %CPU  /sec %CPU
</span><span class='line'>Encrypted    <span class="m">0</span>  15.8 97.7 640.8 50.8 702.6 44.0  15.3 95.8 5153.8 99.5 <span class="m">181241</span> 146.3
</span></code></pre></td></tr></table></div></figure>


<p>一回測定しただけなので信憑性は疑問ですが，そんなに性能が劣化することはないようですね．</p>

<p>暗号化後の方が性能が上がっている項目があるのはどういうことなんでしょう．<br/>
アクセスが速くなることはないと思うので，これは測定誤差でしょうか．</p>

<p>他のツールでも計測してみる予定でしたが，CLIで使える良さそうなディスクベンチが見つからなかったので断念しました．</p>

<h2>おまけ</h2>

<p>FileVault2で使われているXTS-AESという暗号化手法が興味深かったのでメモ．
<a href="http://www.securevm.org/svms2-slides/svms2-omote.pdf">http://www.securevm.org/svms2-slides/svms2-omote.pdf</a></p>

<p>ディスク暗号化にCBCモードを用いると安全でないというのは知らなかったです．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cliclickでターミナルからMacのマウスを制御]]></title>
    <link href="http://blog.shironoo.org/blog/2014/10/11/control-mouse-on-mac/"/>
    <updated>2014-10-11T17:14:41+09:00</updated>
    <id>http://blog.shironoo.org/blog/2014/10/11/control-mouse-on-mac</id>
    <content type="html"><![CDATA[<p>cliclickというプログラムを使ってMacでターミナルからマウス操作をしてみる．
<a href="http://www.bluem.net/de/mac/cliclick/">http://www.bluem.net/de/mac/cliclick/</a></p>

<p>最近version 3になって使い方が変わっていたのでメモ．</p>

<!-- more -->


<h2>インストール</h2>

<p>Homebrewからインストール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install cliclick
</span></code></pre></td></tr></table></div></figure>


<h2>使い方</h2>

<ul>
<li>座標(x,y)をクリック<br/>
<code>cliclick c:x,y</code></li>
<li>座標(x,y)をダブルクリック<br/>
<code>cliclick dc:x,y</code></li>
<li>座標(a,b), (c,d), (e,f)の順に1秒間隔でクリック
<code>cliclick -w 1000 c:a,b c:c,d c:e,f</code></li>
</ul>


<p><code>-r</code>オプションをつけることで，操作後にマウスポインタの位置を元に戻すことができます．</p>

<p>その他，詳しいことは<code>cliclick -h</code>を参照．<br/>
キープレスのエミュレーションなどもできるようです．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自宅サーバからDigitalOceanのVPSへ引っ越した]]></title>
    <link href="http://blog.shironoo.org/blog/2014/10/08/digitalocean/"/>
    <updated>2014-10-08T14:06:37+09:00</updated>
    <id>http://blog.shironoo.org/blog/2014/10/08/digitalocean</id>
    <content type="html"><![CDATA[<h2>DigitalOceanとは</h2>

<p>1時間1円で借りられる格安VPSサーバです．<br/>
今回借りた最安プラン（一ヶ月5ドル）のスペックは</p>

<ul>
<li>CPU: 1 Core</li>
<li>Memory: 512MB</li>
<li>Storage: 20GB SSD</li>
<li>転送量: 1TB</li>
</ul>


<p>とまずまず．</p>

<!-- more -->


<p>さくらVPSとAWSの中間のような機能を持っており，お手軽にIaaSを体感することができます．<br/>
SSDのおかげで体感速度はなかなかのものです．</p>

<h2>ベンチマーク</h2>

<ul>
<li>リージョン: シンガポール</li>
<li>OS: CentOS 7</li>
</ul>


<h3>cpuinfo</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /proc/cpuinfo
</span><span class='line'>processor       : 0
</span><span class='line'>vendor_id       : GenuineIntel
</span><span class='line'>cpu family      : 6
</span><span class='line'>model             : 62
</span><span class='line'>model name        : Intel<span class="o">(</span>R<span class="o">)</span> Xeon<span class="o">(</span>R<span class="o">)</span> CPU E5-2630L v2 @ 2.40GHz
</span><span class='line'>stepping          : 4
</span><span class='line'>microcode         : 0x1
</span><span class='line'>cpu MHz             : 2399.998
</span><span class='line'>cache size          : <span class="m">4096</span> KB
</span><span class='line'>physical id         : 0
</span><span class='line'>siblings : 1
</span><span class='line'>core id    : 0
</span><span class='line'>cpu cores  : 1
</span><span class='line'>apicid       : 0
</span><span class='line'>initial apicid : 0
</span><span class='line'>fpu            : yes
</span><span class='line'>fpu_exception  : yes
</span><span class='line'>cpuid level    : 13
</span><span class='line'>wp             : yes
</span><span class='line'>flags            : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl eagerfpu pni pclmulqdq vmx ssse3 cx16 pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm xsaveopt fsgsbase tsc_adjust smep erms
</span><span class='line'>bogomips         : 4799.99
</span><span class='line'>clflush size     : 64
</span><span class='line'>cache_alignment  : 64
</span><span class='line'>address sizes    : <span class="m">40</span> bits physical, <span class="m">48</span> bits virtual
</span><span class='line'>power management:
</span></code></pre></td></tr></table></div></figure>


<h3>UnixBench</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./Run
</span><span class='line'><span class="o">(</span>snip<span class="o">)</span>
</span><span class='line'>------------------------------------------------------------------------
</span><span class='line'>Benchmark Run: Wed Oct <span class="m">08</span> <span class="m">2014</span> 15:41:14 - 16:08:57
</span><span class='line'><span class="m">1</span> CPU in system<span class="p">;</span> running <span class="m">1</span> parallel copy of tests
</span><span class='line'>
</span><span class='line'>Dhrystone <span class="m">2</span> using register variables       29081440.4 lps   <span class="o">(</span>10.0 s, <span class="m">7</span> samples<span class="o">)</span>
</span><span class='line'>Double-Precision Whetstone                     3607.8 MWIPS <span class="o">(</span>8.2 s, <span class="m">7</span> samples<span class="o">)</span>
</span><span class='line'>Execl Throughput                               3347.0 lps   <span class="o">(</span>30.0 s, <span class="m">2</span> samples<span class="o">)</span>
</span><span class='line'>File Copy <span class="m">1024</span> bufsize <span class="m">2000</span> maxblocks        871848.0 KBps  <span class="o">(</span>30.0 s, <span class="m">2</span> samples<span class="o">)</span>
</span><span class='line'>File Copy <span class="m">256</span> bufsize <span class="m">500</span> maxblocks          225866.5 KBps  <span class="o">(</span>30.0 s, <span class="m">2</span> samples<span class="o">)</span>
</span><span class='line'>File Copy <span class="m">4096</span> bufsize <span class="m">8000</span> maxblocks       1427132.0 KBps  <span class="o">(</span>30.0 s, <span class="m">2</span> samples<span class="o">)</span>
</span><span class='line'>Pipe Throughput                             1665126.8 lps   <span class="o">(</span>10.0 s, <span class="m">7</span> samples<span class="o">)</span>
</span><span class='line'>Pipe-based Context Switching                 226668.9 lps   <span class="o">(</span>10.0 s, <span class="m">7</span> samples<span class="o">)</span>
</span><span class='line'>Process Creation                               9210.5 lps   <span class="o">(</span>30.0 s, <span class="m">2</span> samples<span class="o">)</span>
</span><span class='line'>Shell Scripts <span class="o">(</span><span class="m">1</span> concurrent<span class="o">)</span>                   4643.1 lpm   <span class="o">(</span>60.0 s, <span class="m">2</span> samples<span class="o">)</span>
</span><span class='line'>Shell Scripts <span class="o">(</span><span class="m">8</span> concurrent<span class="o">)</span>                    619.2 lpm   <span class="o">(</span>60.1 s, <span class="m">2</span> samples<span class="o">)</span>
</span><span class='line'>System Call Overhead                        2135413.1 lps   <span class="o">(</span>10.0 s, <span class="m">7</span> samples<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>System Benchmarks Index Values               BASELINE       RESULT    INDEX
</span><span class='line'>Dhrystone <span class="m">2</span> using register variables         116700.0   29081440.4   2492.0
</span><span class='line'>Double-Precision Whetstone                       55.0       3607.8    656.0
</span><span class='line'>Execl Throughput                                 43.0       3347.0    778.4
</span><span class='line'>File Copy <span class="m">1024</span> bufsize <span class="m">2000</span> maxblocks          3960.0     871848.0   2201.6
</span><span class='line'>File Copy <span class="m">256</span> bufsize <span class="m">500</span> maxblocks            1655.0     225866.5   1364.8
</span><span class='line'>File Copy <span class="m">4096</span> bufsize <span class="m">8000</span> maxblocks          5800.0    1427132.0   2460.6
</span><span class='line'>Pipe Throughput                               12440.0    1665126.8   1338.5
</span><span class='line'>Pipe-based Context Switching                   4000.0     226668.9    566.7
</span><span class='line'>Process Creation                                126.0       9210.5    731.0
</span><span class='line'>Shell Scripts <span class="o">(</span><span class="m">1</span> concurrent<span class="o">)</span>                     42.4       4643.1   1095.1
</span><span class='line'>Shell Scripts <span class="o">(</span><span class="m">8</span> concurrent<span class="o">)</span>                      6.0        619.2   1031.9
</span><span class='line'>System Call Overhead                          15000.0    2135413.1   1423.6
</span><span class='line'>                                                                   <span class="o">========</span>
</span><span class='line'>System Benchmarks Index Score                                        1193.9
</span></code></pre></td></tr></table></div></figure>


<h3>hdparm</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo hdparm -Tt /dev/vda1
</span><span class='line'>/dev/vda1:
</span><span class='line'> Timing cached reads:   <span class="m">17478</span> MB in  2.00 <span class="nv">seconds</span> <span class="o">=</span> 8750.56 MB/sec
</span><span class='line'> Timing buffered disk reads: <span class="m">2612</span> MB in  3.00 <span class="nv">seconds</span> <span class="o">=</span> 869.81 MB/sec
</span></code></pre></td></tr></table></div></figure>


<h3>Ping</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ping -c <span class="m">10</span> www.shironoo.org
</span><span class='line'>PING www.shironoo.org <span class="o">(</span>128.199.136.12<span class="o">)</span>: <span class="m">56</span> data bytes
</span><span class='line'><span class="m">64</span> bytes from 128.199.136.12: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">0</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">49</span> <span class="nb">time</span><span class="o">=</span>78.354 ms
</span><span class='line'><span class="m">64</span> bytes from 128.199.136.12: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">1</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">49</span> <span class="nb">time</span><span class="o">=</span>77.436 ms
</span><span class='line'><span class="o">(</span>snip<span class="o">)</span>
</span><span class='line'><span class="m">64</span> bytes from 128.199.136.12: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">9</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">49</span> <span class="nb">time</span><span class="o">=</span>82.251 ms
</span><span class='line'>
</span><span class='line'>--- www.shironoo.org ping statistics ---
</span><span class='line'><span class="m">10</span> packets transmitted, <span class="m">10</span> packets received, 0.0% packet loss
</span><span class='line'>round-trip min/avg/max/stddev <span class="o">=</span> 77.436/78.479/82.251/1.337 ms
</span></code></pre></td></tr></table></div></figure>


<h2>注意事項</h2>

<p>IPv6でメール配送が上手くいかなくてつまづきました．<br/>
調べたところ，IPv6のみOP25Bをやっているようです．<br/>
<a href="https://www.digitalocean.com/community/questions/outgoing-smtp-over-ipv6-on-london-location">https://www.digitalocean.com/community/questions/outgoing-smtp-over-ipv6-on-london-location</a></p>

<p>とりあえずPostfixのメール配送にIPv4を優先して用いるようにして対処しました．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi /etc/postfix/main.cf
</span><span class='line'><span class="nv">smtp_address_preference</span> <span class="o">=</span> ipv4
</span></code></pre></td></tr></table></div></figure>


<h2>まとめ</h2>

<p>検証環境のためにちょっとサーバが欲しいんだけど・・・というときにぴったりのVPSです．<br/>
APIも充実しているので，スクリプトとの親和性も高そう．<br/>
日本から最寄りのリージョンはシンガポールなので，そこまでアクセス速度が問題になることもないかと．</p>

<p>次のリンクから登録していただけると僕が喜びます．<br/>
登録者も$10のボーナスが貰えるそうなので是非．<br/>
<a href="https://www.digitalocean.com/?refcode=3e87155bd345">https://www.digitalocean.com/?refcode=3e87155bd345</a></p>
]]></content>
  </entry>
  
</feed>
